---
version: 2.1
commands:
  check-changed-files-or-halt:
    description: "Halt job if changed any changed file matches pattern"
    parameters:
      pattern:
        type: string
    steps:
      - run: git diff --name-only develop...HEAD|grep -q '<< parameters.pattern >>' || circleci step halt

jobs:
  safety_check:
    docker:
      - image: cimg/python:3.9
    working_directory: ~/securedrop.org
    steps:
      - checkout

      - run:
          name: Obtain misc resources
          command: git clone --depth 1 https://github.com/freedomofpress/fpf-misc-resources.git

      - run:
          name: Install pip dependencies
          command: pip install --no-deps --require-hashes -r dev-requirements.txt

      - run:
          name: Check Python dependencies for CVEs
          command: make safety

      - run:
          name: Update bandit to the latest version
          command: pip install --upgrade bandit

      - run:
          name: Static code analysis for vulnerabilities
          command: ./scripts/bandit

  npm_audit:
    docker:
      - image: cimg/node:18.16
    working_directory: ~/securedrop.org
    steps:
      - checkout
      - check-changed-files-or-halt:
          pattern: ^package-lock.json$

      - run:
          name: Obtain misc resources
          command: git clone --depth 1 https://github.com/freedomofpress/fpf-misc-resources.git

      - run:
          name: Check node dependencies for vulnerabilities
          command: npx audit-ci@^6 --config fpf-misc-resources/audit-ci/securedrop.org.json5

  build_dev:
    machine:
      image: ubuntu-2204:2023.04.2
    working_directory: ~/securedrop.org
    steps:
      - checkout

      - run:
          name: Ensure we can run dev-env
          command: |
            make dev-init
            docker-compose up -d
            echo "Polling with curl --silent until Django is up..."
            while ! curl --output /dev/null --silent --head --fail http://localhost:8000; do sleep 5; done
            make flake8
            make dev-tests
            make check-migrations
          no_output_timeout: 5m

      - store_artifacts:
          path: htmlcov

      - run:
          name: Yank docker logs
          command: |
            mkdir -p ~/dockercomposelogs || true
            docker-compose logs > ~/dockercomposelogs/dev.log
          when: always

      - store_artifacts:
          path: ~/dockercomposelogs

      - store_test_results:
          path: ~/securedrop.org/test-results

  build_prod:
    docker:
      - image: cimg/python:3.9
    working_directory: ~/securedrop.org
    steps:
      - checkout

      - setup_remote_docker:
          version: 20.10.7

      - run:
          name: Ensure we can run prod-env
          command: |
            docker-compose -f prod-docker-compose.yaml build
            docker-compose -f prod-docker-compose.yaml up -d
            docker run --rm --network securedroporg_app curlimages/curl:7.80.0 -4 --retry 24 --retry-delay 5 --retry-all-errors http://app:8000/health/ok/
            docker-compose -f prod-docker-compose.yaml exec django /bin/bash -c "./manage.py createdevdata --no-download"
          no_output_timeout: 5m

      - run:
          name: Yank docker logs
          command: |
            mkdir -p ~/dockercomposelogs || true
            docker-compose -f prod-docker-compose.yaml logs > ~/dockercomposelogs/prod.log
          when: always

      - store_artifacts:
          path: ~/dockercomposelogs

workflows:
  version: 2
  freedomdotpress_ci:
    jobs:
      - safety_check
      - npm_audit
      - build_dev
      - build_prod
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - develop
    jobs:
      - safety_check
