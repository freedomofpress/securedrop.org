from django.apps import AppConfig


# There's a bug in version 2.3 of wagtail that makes its rich text
# editor not backwards-compatible with some HTML that could be
# generated by the text editor in versions < 2.0.  This code attempts
# to work around the issue to avoid the crash by monkeypatching the
# HTML parser within the wagtail rich text system.

# Ideally this code can be removed when the bug itself is fixed.
# See discussion here: https://github.com/wagtail/wagtail/issues/4602
def InlineStyleElementHandler__handle_endtag(self, name, state, contentstate):
    inline_style_range = state.current_inline_styles.pop()
    assert inline_style_range.style == self.style
    try:
        inline_style_range.length = (
            len(state.current_block.text) - inline_style_range.offset
        )
    except AttributeError:
        inline_style_range.length = inline_style_range.offset


def BlockElementHandler__handle_endtag(self, name, state, contentState):
    state.current_block = None


def InlineEntityElementHandler__handle_endtag(self, name, state, contentstate):
    entity_range = state.current_entity_ranges.pop()
    try:
        entity_range.length = len(state.current_block.text) - entity_range.offset
    except AttributeError:
        entity_range.length = entity_range.offset


class CommonConfig(AppConfig):
    name = 'common'

    def ready(self):
        import common.signals  # noqa: F401
        from wagtail.admin.rich_text.converters.html_to_contentstate import (
            InlineStyleElementHandler,
            BlockElementHandler,
            InlineEntityElementHandler
        )

        InlineStyleElementHandler.handle_endtag = (
            InlineStyleElementHandler__handle_endtag
        )
        BlockElementHandler.fpf_old_handle_endtag = BlockElementHandler.handle_endtag
        BlockElementHandler.handle_endtag = BlockElementHandler__handle_endtag

        InlineEntityElementHandler.handle_endtag = InlineEntityElementHandler__handle_endtag
