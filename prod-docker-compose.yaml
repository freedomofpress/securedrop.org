---
version: "3"
networks:
  app:
services:
  postgresql:
    image: postgres:9.5
    ports:
      - "5432"
    volumes:
      - ./devops/docker/postgres-scripts:/docker-entrypoint-initdb.d:ro
    environment:
      POSTGRES_PASSWORD: securedroppassword
      POSTGRES_USER: securedrop
      POSTGRES_DB: securedropdb
    user: postgres
    networks:
      app:
        aliases:
          - db

  django:
    build:
      context: .
      dockerfile: devops/docker/ProdDjangoDockerfile
      args:
        USERID: 12345
    image: quay.io/freedomofpress/securedroporg
    depends_on:
      - postgresql
    working_dir: /django
    volumes:
      - ${HOST_STATIC_DIR:-sdorg-django-media}:/django-media
      - ${HOST_MEDIA_DIR:-sdorg-django-static}:/django-static
    environment:
      DJANGO_ALLOWED_HOSTS: app localhost
      DJANGO_APP_NAME: securedrop
      DJANGO_COLLECT_STATIC: "yes"
      DJANGO_SETTINGS_MODULE: securedrop.settings.production
      # Arbitrary key for this "prod-like" testing setup. Do not use in real life.
      DJANGO_SECRET_KEY: 64a235ef65834d8b42fa2802dd4290cf61c773c3f31332039ec5c48165f744da
      DJANGO_DB_PASSWORD: securedroppassword
      DJANGO_DB_USER: securedrop
      DJANGO_DB_NAME: securedropdb
      DJANGO_DB_PORT: 5432
      DJANGO_DB_HOST: db
      DJANGO_STATIC_ROOT: /django-static
      DJANGO_MEDIA_ROOT: /django-media
      DEPLOY_ENV: prod
      DJANGO_WHITENOISE: 'True'
    ports:
      - "8000:8000"
    networks:
      app:
        aliases:
          - app

volumes:
  sdorg-django-static:
  sdorg-django-media:
