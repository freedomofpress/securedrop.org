# sha256 as of 2022-08-02
FROM node:16-alpine@sha256:1908564153449b1c46b329e6ce2307e226bc566294f822f11c5a8bcef4eeaad7 AS node-assets

# Install npm, making output less verbose
ARG NPM_VER=9.6.0
ENV NPM_CONFIG_LOGLEVEL warn
RUN npm install npm@${NPM_VER} --location=global

# Oddly, node-sass requires both python and make to build bindings
RUN apk add --no-cache paxctl python3 make g++
RUN paxctl -cm /usr/local/bin/node

# Install gulp globally so it can be used during builds
RUN npm install --global gulp-cli

COPY ./ /src-files
RUN cd /src-files && ( npm install && npm run build )


LABEL MAINTAINER="Freedom of the Press Foundation"
LABEL APP="securedrop.org"

# sha256 for python:3.9.16-slim-buster on linux/amd64 as of 2023-06-01
FROM python:3.9-slim-buster@sha256:6199d5aaae3f33f415501ec9737fad89c147bcc0ce47f2e62d8c59cb4f7f8243 AS python-base

RUN apt-get update && apt-get install -y \
    curl \
    gcc \
    build-essential \
    git \
    libffi-dev \
    libssl-dev \
    libpq-dev \
    libxml2-dev \
    libxslt-dev \
    libz-dev \
    netcat \
    python3-dev \
    && apt-get clean && rm -rf /var/lib/apt/lists/*


COPY devops/docker/django-start.sh /usr/local/bin
RUN  chmod +x /usr/local/bin/django-start.sh

ARG USERID
RUN getent passwd "${USERID?USERID must be supplied}" || adduser --uid "${USERID}" --disabled-password --gecos "" gcorn

COPY --from=node-assets /src-files/ /django/
# Unfortunately the chown flag in COPY is not
# available in my docker system version :(
RUN find /django -path /django/node_modules -prune -o -print -exec chown gcorn: '{}' \;

WORKDIR /django
RUN pip install --require-hashes -r /django/requirements.txt


# Really not used in production. Needed for mapped named volume
# permission handling https://github.com/docker/compose/issues/3270
RUN  mkdir /django-media /django-static /django-logs && \
    chown -R gcorn: /django-media && \
    chown -R gcorn: /django-static && \
    chown -R gcorn: /django-logs

RUN mkdir -p /etc/gunicorn && chown -R gcorn: /etc/gunicorn
COPY devops/docker/gunicorn/gunicorn.py /etc/gunicorn/gunicorn.py

# Create /deploy as root
RUN mkdir /deploy && chown -R gcorn: /deploy

EXPOSE 8000
USER ${USERID}

# Run version info script as gcorn user (required as the repo directories are owned by this user)
RUN /django/devops/scripts/version-file.sh

# since no django env is specified, runs in dev; disable DEBUG
RUN env DJANGO_DISABLE_DEBUG=1 ./manage.py collectstatic -c --noinput
CMD django-start.sh
