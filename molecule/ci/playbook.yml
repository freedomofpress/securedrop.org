---

- name: Run django environment
  hosts: django
  become: yes
  environment:
    # Required to install pshtt
    LC_ALL: "en_US.UTF-8"
  pre_tasks:
    - name: Check for existence of grsec kernel
      stat:
        path: /proc/sys/kernel/grsecurity/
      register: check_grsec_kernel_results

    - name: Make sure paxctld is started
      service:
        name: paxctld
        state: started
      when: check_grsec_kernel_results.stat.exists

    - name: Create postgres DB
      postgresql_db:
        name: securedrop
        owner: "{{ django_db_user }}"
      register: pg_db_results
      until: pg_db_results|succeeded
      retries: 5
      delay: 20

    - name: Ensure hstore extension in-place
      postgresql_ext:
        name: hstore
        db: "{{ item }}"
      become_user: postgres
      with_items:
        - securedrop
        # Tests will create a new testdb from the template with the extension
        # pre-installed. Not needed in prod.
        - template1

  tasks:
    # The paxtld flags should be added to the CI base image.
    - name: Layout pax config
      lineinfile:
        dest: /etc/paxctld.conf
        line: "{{ item }}"
      with_items:
        - "/usr/bin/nodejs m"
        - "/home/gcorn/securedrop/bin/python3 m"
        - "/home/gcorn/securedrop/bin/pip m"
        - "/home/gcorn/securedrop-alpha/bin/python3 m"
        - "/home/gcorn/securedrop-alpha/pip m"
        - "/usr/bin/python m"
        - "/usr/bin/python3 m"
      when: check_grsec_kernel_results.stat.exists
      notify: Restart paxctld
      register: grsec_config_results

    - debug:
        msg: "You can hit the www interface at https://localhost:{{ lookup('pipe', 'docker port debian_jessie_sd.org_ci 443 | cut -d\":\" -f 2') }}"

  roles:
    - role: freedomofpress.django
      tags: django
  # The paxtld flags should be added to the CI base image.
  handlers:
    - name: Restart paxctld
      service:
        name: paxctld
        enabled: yes
        state: restarted
  vars:
    django_stack_superuser_admin: admin
    django_stack_superuser_email: mike@freedom.press
    django_db_user: django_user
    django_db_password: django_password
    django_stack_app_name: securedrop
    django_secret_key: f1822d2fe58daeadc88e0e4eef2f155fc3edd3713ff9a5d1e27696afd9231d905db51c98dc
    django_stack_es_host_url: disable
    django_stack_deploy_src: "{{ lookup('pipe', 'pwd') }}/../../"
    django_stack_manage_post:
      - createdevdata
    django_stack_npm_install_cmd: "npm install; npm run build"
    django_stack_gunicorn_opt_envs:
      DJANGO_ALLOWED_HOSTS: "'*'"
      DJANGO_SETTINGS_MODULE: securedrop.settings.production-ci
      DJANGO_JSON_LOG: True
      DJANGO_DB_NAME: securedrop
      GITHUB_HOOK_SECRET_KEY: test
    django_stack_gcorn_app_settings: securedrop.settings.production-ci
    django_stack_force_refresh: true
    django_stack_rsync_opts:
      - "--exclude=devops"
      - "--exclude=molecule"
      - "--exclude=node_modules"
      - "--exclude=src"
    django_stack_venv_base_pkgs:
      - setuptools # pshtt dependency sslyze requires newer setuptools
    django_stack_pkgs:
      - libssl-dev # required for pshtt
    django_stack_global_no_log: yes
    django_stack_manage_no_log: no
    django_stack_rsync_no_log: no
